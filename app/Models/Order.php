<?php

namespace App\Models;

use Dcat\Admin\Admin;
use Dcat\Admin\Traits\HasDateTimeFormatter;

use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;

class Order extends Model
{
	use HasDateTimeFormatter;

    protected $table = 'order';
    protected $dateFormat = 'U';

    protected $guarded=['id'];

     public function getCreatedAtAttribute($timestamp)
    {
        $date = new \DateTime();
        $timestamp = $date->setTimestamp($timestamp);
        return $timestamp->format('Y-m-d H:i');
    }

    public function getUpdatedAtAttribute($timestamp)
    {
        $date = new \DateTime();
        $timestamp = $date->setTimestamp($timestamp);
        return $timestamp->format('Y-m-d H:i');
    }


    protected static function boot()
    {
        parent::boot();    //TODO: Change the autogenerated stub
        $admin = Admin::user();
        if($admin){
            $type = $admin['type'];
            $user = $admin['id'];
            if(isset($type)){
                if($type == 'code'){
                    static::addGlobalScope('avaiable', function(Builder $builder) use ($user){
                        $builder->where('ms_id', $user);
                    });
                }else{
                    static::addGlobalScope('avaiable', function(Builder $builder) use ($user){
                        $builder->where('uid', $user);
                    });
                }

            }else{
                  if($admin['id'] == '1' || $admin['id'] == '4'){
                            static::addGlobalScope('avaiable', function(Builder $builder){
                                $start = request()->input('created_at');
                                if(empty($start)){
                                    $start = strtotime(date('Ymd 00:00:00'));
                                    $end = strtotime(date('Ymd 23:59:59'));
                                    $builder->whereBetween('created_at', [$start, $end]);
                                }
                            });
                  }else{
                            $userId = User::where('admin', $admin['id'])->pluck('id')->toArray();
                            static::addGlobalScope('avaiable', function(Builder $builder) use ($userId){
                                $builder->whereIn('ms_id', $userId);
                            });
                  }
            }
        }
    }
}
